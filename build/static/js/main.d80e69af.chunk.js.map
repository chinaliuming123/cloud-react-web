{"version":3,"sources":["config/index.ts","utils/index.ts","routes/config.ts","pages/Home.tsx","pages/Article.tsx","pages/404.tsx","routes/index.tsx","layout/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["config","envId","require","storageBaseUrl","getApp","app","window","tcb","init","env","auth","persistence","appRoutes","path","component","db","database","history","useHistory","useState","loginLoading","setLoginLoading","listData","setlistData","getListData","a","collection","get","data","IconText","result","React","createElement","icon","text","anonymousAuthProvider","signIn","getLoginState","loginState","console","log","isAnonymous","useEffect","login","itemLayout","size","loading","pagination","onChange","page","pageSize","dataSource","renderItem","item","Item","key","title","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","onClick","id","_id","push","color","description","span","offset","useParams","content","article","setArticle","getData","doc","className","onBack","goBack","subTitle","dangerouslySetInnerHTML","__html","status","RenderRoutes","map","route","index","exact","strict","Header","Content","SubMenu","MainLayout","props","style","height","offsetTop","mode","theme","ItemGroup","padding","display","flexDirection","flex","background","bordered","overflow","children","menus","filter","menu","App","setLoading","script","document","type","head","appendChild","Promise","resolve","onload","loadScript","then","active","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d80e69af.chunk.js","sourcesContent":["/* eslint-disable */\nconst cloudbaseConfig = require('../../cloudbaserc')\n\nexport const config = {\n  envId: cloudbaseConfig.envId,\n  storageBaseUrl: ''\n}\n","import { config } from '@/config'\n\nexport const getApp = () => {\n  const app = window.tcb.init({\n    env: config.envId\n  })\n\n  app.auth({\n    persistence: 'local'\n  })\n  return app\n}\n","import { RouteProps } from 'react-router'\nimport { Home, NoFoundPage, Article } from '../pages'\n\nexport interface IRouteProps extends RouteProps {\n  menu?: boolean\n  title?: string\n}\n\n\nexport const appRoutes: IRouteProps[] = [\n  {\n    path: '/',\n    component: Home\n  },\n  {\n    path: '/article/:id',\n    component: Article\n  },\n  {\n    path: '**',\n    component: NoFoundPage\n  }\n]\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Button, List, Avatar, Space, Tag } from 'antd'\nimport { getApp } from '@/utils'\nimport { useHistory } from 'react-router-dom'\n// import { config } from '@/config'\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\ninterface Article {\n  _id: string,\n  title: string,\n  description: string,\n  content: string,\n  avatar?: string,\n}\nexport const Home: React.FC<{}> = () => {\n  /**初始化 */\n  const app = getApp()\n  const db = app.database()\n  const history = useHistory()\n  const [loginLoading, setLoginLoading] = useState(false)\n\n\n  // 跳转\n  const toAbout = () => {\n    history.push('/about')\n  }\n\n  /** 列表 */\n  const [listData, setlistData] = useState([])\n  const getListData = async () => {\n    //获取数据库数据\n    const { data } = await db.collection('article').get()\n    setlistData(data)\n  }\n  const IconText = (result: any) => (\n    <Space>\n      {React.createElement(result.icon)}\n      {result.text}\n    </Space>\n  );\n\n  /**点击标题 */\n  const titleClick = (id: string) => {\n    history.push(`/article/${id}`)\n  }\n\n  /** 登录,获取数据 */\n  async function login() {\n    setLoginLoading(true)\n    const auth = app.auth();\n    await auth.anonymousAuthProvider().signIn();\n    // 匿名登录成功检测登录状态isAnonymous字段为true\n    const loginState = await auth.getLoginState();\n    console.log(loginState.isAnonymous); // true\n    getListData() // 获取数据\n    setLoginLoading(false)\n  }\n  /** 生命周期 */\n  useEffect(() => {\n    login() // 登录\n  }, [])\n\n  return (\n    <div>\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        loading={loginLoading}\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 5,\n        }}\n        dataSource={listData}\n        renderItem={(item: Article) => (\n          <List.Item\n            key={item.title}\n            actions={[\n              <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n              <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n              <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n            ]}\n            extra={\n              <img\n                width={200}\n                alt=\"logo\"\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n              />\n            }\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a onClick={() => titleClick(item._id)} color=\"orange\">{item.title}</a>}\n              description={item.description}\n            />\n          </List.Item>\n        )}\n      />\n      <Row>\n        <Col span={8} offset={8}>\n          <Button onClick={toAbout}>about</Button>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import { getApp } from '@/utils'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { PageHeader } from 'antd'\r\n\r\ninterface RouteParams {\r\n  id: string\r\n}\r\ninterface Article {\r\n  _id: string,\r\n  title: string,\r\n  description: string,\r\n  content: string,\r\n  avatar?: string,\r\n}\r\n\r\nexport const Article: React.FC<{}> = () => {\r\n  const { id } = useParams<RouteParams>()\r\n  const history = useHistory()\r\n  const app = getApp()\r\n  const db = app.database()\r\n  /**获取数据 */\r\n\r\n  const [article, setArticle] = useState<Article>({\r\n    _id: '',\r\n    title: '',\r\n    description: '',\r\n    content: '',\r\n    avatar: '',\r\n  })\r\n  const getData = async () => {\r\n    const { data } = await db.collection('article').doc(id).get()\r\n    console.log(data)\r\n    setArticle(data[0])\r\n  }\r\n  /**生命周期 */\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        onBack={() => history.goBack()}\r\n        title={article.title}\r\n        subTitle={article.description}\r\n      />\r\n      <div dangerouslySetInnerHTML={{\r\n        __html: article.content\r\n      }}></div>\r\n    </div>\r\n  )\r\n}","import { Result } from 'antd'\nimport React from 'react'\n\nexport const NoFoundPage: React.FC<{}> = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle=\"Sorry, the page you visited does not exist.\"\n    extra={<span>Back Home</span>}\n  />\n)\n\n","import React from 'react'\nimport { Switch, Route, RouteProps } from 'react-router-dom'\nimport { appRoutes } from './config'\nexport * from './config'\n\nfunction SwitchRoutes(appRoutes: RouteProps[]) {\n  return (\n    <Switch>\n      {appRoutes.map((route, index) => (\n        <Route\n          key={index}\n          path={route.path}\n          component={route.component}\n          exact={route.exact || true}\n          strict={route.strict || false}\n        />\n      ))}\n    </Switch>\n  )\n}\n\nexport function RenderRoutes() {\n  return SwitchRoutes(appRoutes)\n}\n","import React from 'react'\nimport { Layout, Card, Avatar, Affix, Menu } from 'antd'\n// import { useHistory } from 'react-router'\nimport { IRouteProps } from '@/routes/config'\nimport { config } from '@/config'\nimport './index.less'\n\nconst { Header, Content } = Layout\nconst { SubMenu } = Menu;\n\n\nexport interface ILayoutProps {\n  menus: IRouteProps[]\n}\n\nexport function MainLayout(props: React.PropsWithChildren<ILayoutProps>) {\n\n  return (\n    <div className=\"App\">\n      <Layout style={{ height: '100%' }}>\n        <Affix offsetTop={0}>\n          <Header className=\"header flex\">\n            <div className=\"logo\">\n              <Avatar\n                style={{ height: '40px', width: '40px' }}\n                src={`${config.storageBaseUrl}/icon.png`}\n              />\n            </div>\n            <Menu mode=\"horizontal\" theme=\"dark\">\n              <Menu.Item key=\"mail\">\n                Navigation One\n              </Menu.Item>\n              <Menu.Item key=\"app\">\n                Navigation Two\n              </Menu.Item>\n              <SubMenu key=\"SubMenu\" title=\"Navigation Three - Submenu\">\n                <Menu.ItemGroup title=\"Item 1\">\n                  <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n                  <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n                </Menu.ItemGroup>\n                <Menu.ItemGroup title=\"Item 2\">\n                  <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n                  <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n                </Menu.ItemGroup>\n              </SubMenu>\n            </Menu>\n          </Header>\n        </Affix>\n        <Content style={{ padding: '0 50px', display: 'flex', flexDirection: 'column' }}>\n          <Layout style={{ padding: '24px 0', flex: '1 1 auto', background: '#fff' }}>\n            <Content style={{ padding: '0 24px' }}>\n              <Card className=\"card\" bordered={false}>\n                <div className=\"card-content\" style={{ overflow: 'auto' }}>\n                  {props.children}\n                </div>\n              </Card>\n            </Content>\n          </Layout>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Skeleton } from 'antd'\nimport { BrowserRouter } from 'react-router-dom'\nimport { RenderRoutes, appRoutes } from './routes'\nimport { MainLayout } from './layout'\nimport 'antd/dist/antd.css'\nimport './App.less'\n\nconst menus = appRoutes.filter((item) => item.menu)\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const loadScript = async () => {\n    const script = document.createElement('script')\n    script.type = 'text/javascript'\n    script.src = 'https://imgcache.qq.com/qcloud/tcbjs/1.5.0/tcb.js'\n    document.head.appendChild(script)\n\n    return new Promise((resolve) => {\n      script.onload = () => {\n        resolve()\n      }\n    })\n  }\n\n  loadScript().then(() => {\n    setLoading(false)\n  })\n\n  return (\n    <div className=\"App\">\n      <MainLayout menus={menus}>{loading ? <Skeleton active /> : RenderRoutes()}</MainLayout>\n    </div>\n  )\n}\n\nexport default () => {\n  return (\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as online.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.less'\n\ndeclare global {\n  interface Window {\n    tcb: any\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}